# 복습날짜 : 


#1교시  
#

#명령어 ctrl k 다음 m 누르면 언어 바뀌기 가능. 가벼운게 장점인 vscode
# 인코딩 파일 지정.. 등 뭔말인지 일단 모르겠는데 csv 따와서 꺠질때 그걸해주면된다

# 어디 기준인지 파악해야한다. 
# 어딜 기준으로 파일 오픈하느냐에 따라 import 오류 등을 방지할 수 있다

# 2교시

#개발하다보니 소스를 유지해야하는데, python은 자세한정보가 안나오고 그래, , 품질관리가 어렵다
# 그렇다면 빠르게 프로토타입은 파이썬, js등으로 하되 안정적인게 필요한 곳에서는 여전히 안정적java?

# 양이적고 나혼자 할 떄는 상관없다. 

import keyword
print(keyword.kwlist)


# 생각의 흐름이 중요하다.

# 해보고 > 책 > 실행. . 

print('hello world')

print(""" 한번에 쓸 수 있다.
그렇게 나타나는 것. """)

# 어셈블리 ,펌웨어,  , , 돈이되는것

# 데이터는 데이터 합치는거 검색, 등 데이터 전처리 하는 과정이 연습 필요하다.
# 다음이 분석이다. . 

print("안녕", "보봉","으아 코딩 ")


#프로그램은 '자료'를 처리하는 행위, 제일처음 컴퓨터가 만들어진 이유도 어떠한 '자료를' 연산하기
#위함이였고, wwww 이 나온이유도 과학자들 사이의 문서를 무거운 책이 아닌 어떠한 것에서 쉽게 전달하도록
#만들어진 것. 근데, 지금은 그러한 정보가 넘쳐나는 시대라, '정보'를 깔끔하게 정리하고 그것을 활용(판매,마케팅)
#할 수 있는게 최고의 기술? 

#네트워킹 시대에서는 유저들의 정보를 잘 보안하고, 그들의 취향? 을 잘 정리하고 눈으로 볼 수있게 하는게
#중요한 포인트가 된다. 


#자료를 알아야 하는 이뉴는 인간의 몸이 세포로 이루어져있듯 컴퓨터의 모든건 자료로 구성되어있다
#그리고 가장 기본단위가 모여서 기능을 하듯, 가장 기존적인 자료형을 아는게 프로그래밍 언어를 이해하는 기초




print("\'따옴표\'넣어보기")

print("이것은 줄바꾸기 \n 아게 되겠죠.")

print("그리고 \t 이것은 탭이다")



print("이름\t나이\t지역")
print('김기일\t28\t부산')
print('신승민\t27\t서울')



# 줄바꿈을 표시하지 않는것을 할 떄 \ 를 쓴다.

# 각각의 자료형은 쓸 수 있는 연산자를 정해져있따.

print("문자열을 반복해보자")
print("첫사랑에 대한 생각은 왜 떠나지 않는가 .\n"*4)


# 컴퓨터 플랫폼 _p046


print("인덱스에서 0번쨰는 \'인\'이다."[0])


print("슬라이스")


print("안녕하세요"[1:4])

3+4

print(3+4)

#뒤의 숫자 -1의 범위까지 나온다.
#슬라이스를 해도 원본에 대해서는 변하지 않는다

# 파스칼
# 고대 프로그래밍 언어다. c 이전이 교육용, 매킨토시의 제작에 사용되기도 하였다.

# 벨연구소에서 처음 언어를 만들어 보자 b -> c 나옴 
# 지금 c#과 objective c , js 같이 쓰는게 swift 로 프론트엔드 

# c++에서 나온게 java고 그리고 코틀린, go 등의 백엔드
# 데이터를 다루는 것은. 백단이기 떄문에 백단의 공부가 필요

# c의 불편함을 해소하기 위한 것. 그리고 명세화 시킨게 java 인것이다. 실수하지말라고, 안정. 



#문자열 길이 len() 

# js 가 좋은 이유가 백단에서 프론트까지 커버 가능하기 떄문이다.  파이썬도 일부 가능
 
# 파이썬 장고, 진자 , 그래서 python+js 면 풀스택 기본가능

#si가 배우기엔 좋다. 힘들어.. 

a = "안녕하세요"

print(len(a))

# java spring인데 풀스택 원한다? 돈 많이 주더라도 ,, 하지마라..
#































































































